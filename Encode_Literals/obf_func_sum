int sum(int x , int y ) 
{ 
  char _1_sum_$locals[12] ;
  union _1_sum_$node _1_sum_$stack[1][32] ;
  union _1_sum_$node *_1_sum_$sp[1] ;
  unsigned char *_1_sum_$pc[1] ;
  struct _2_sum_1_opaque_NodeStruct *p10 ;
  int r11 ;
  struct _2_sum_1_opaque_NodeStruct *p12 ;
  int r13 ;
  struct _2_sum_1_opaque_NodeStruct *p14 ;
  int r15 ;
  struct _2_sum_1_opaque_NodeStruct *p16 ;
  int _2_sum__BEGIN_1 ;
  int _2_sum__END_1 ;
  int _2_sum__BARRIER_2 ;

  {
  {  /* __blockattribute__(__ATOMIC__)*/ 
  _2_sum__BEGIN_1 = 1;
  p10 = (struct _2_sum_1_opaque_NodeStruct *)malloc(24U);
  p10->next = p10;
  p10->prev = p10;
  _2_sum_1_opaque_list_1 = p10;
  r15 = rand();
  p16 = (struct _2_sum_1_opaque_NodeStruct *)malloc(24U);
  p16->data = 0;
  p16->next = _2_sum_1_opaque_list_1->next;
  p16->prev = _2_sum_1_opaque_list_1;
  (_2_sum_1_opaque_list_1->next)->prev = p16;
  _2_sum_1_opaque_list_1->next = p16;
  r13 = rand();
  p14 = (struct _2_sum_1_opaque_NodeStruct *)malloc(24U);
  p14->data = r13;
  p14->next = _2_sum_1_opaque_list_1->next;
  p14->prev = _2_sum_1_opaque_list_1;
  (_2_sum_1_opaque_list_1->next)->prev = p14;
  _2_sum_1_opaque_list_1->next = p14;
  r11 = rand();
  p12 = (struct _2_sum_1_opaque_NodeStruct *)malloc(24U);
  p12->data = 2 * r11;
  p12->next = _2_sum_1_opaque_list_1->next;
  p12->prev = _2_sum_1_opaque_list_1;
  (_2_sum_1_opaque_list_1->next)->prev = p12;
  _2_sum_1_opaque_list_1->next = p12;
  _2_sum_1_opaque_ptr_1 = _2_sum_1_opaque_list_1->next;
  _2_sum_1_opaque_ptr_2 = _2_sum_1_opaque_ptr_1;
  _2_sum_1_opaque_ptr_2 = _2_sum_1_opaque_ptr_2->next;
  _2_sum__END_1 = 1;
  }
  _2_sum__BARRIER_2 = _2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2;
  _1_sum_$sp[0] = _1_sum_$stack[0];
  _1_sum_$pc[0] = _1_sum_$array[0];
  while (1) {
    switch (*(_1_sum_$pc[0])) {
    case 126: 
    _1_sum_$pc[0] += (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2) + (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2);
    (_1_sum_$sp[0] + ((_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2) + (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2)))->_void_star = (void *)(_1_sum_$locals + *((int *)_1_sum_$pc[0]));
    _1_sum_$sp[0] += (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2) - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    _1_sum_$pc[0] += _2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2 ? 4 | 10 : 4;
    break;
    case 89: 
    _1_sum_$pc[0] += _2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2;
    (_1_sum_$sp[0] + ! (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2))->_int = *((int *)(_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2))->_void_star);
    break;
    case 242: 
    _1_sum_$pc[0] += (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2) - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    *((int *)(_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2))->_void_star) = (_1_sum_$sp[0] + (-1 - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2)))->_int;
    _1_sum_$sp[0] += _2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2 ? -2 : 10;
    break;
    case 183: 
    _1_sum_$pc[0] += (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2) - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    switch (*((int *)_1_sum_$pc[0])) {
    case 1: 
    (_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2))->_void_star = (void *)(& y);
    break;
    case 0: 
    (_1_sum_$sp[0] + ((_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2) - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2)))->_void_star = (void *)(& x);
    break;
    }
    _1_sum_$sp[0] += (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2) + (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2);
    _1_sum_$pc[0] += _2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2 ? 4 : x;
    break;
    case 178: 
    _1_sum_$pc[0] += ! (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    (_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2 ? x : -1))->_int = (_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2))->_int + (_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2 ? -1 : -1 * x))->_int;
    _1_sum_$sp[0] += -1 * ! (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    break;
    case 249: 
    _1_sum_$pc[0] += _2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2;
    return ((_1_sum_$sp[0] + (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2))->_int);
    break;
    case 62: 
    _1_sum_$pc[0] += (_2_sum_1_opaque_ptr_1 != _2_sum_1_opaque_ptr_2) - (_2_sum_1_opaque_ptr_1 == _2_sum_1_opaque_ptr_2);
    _1_sum_$pc[0] += *((int *)_1_sum_$pc[0]);
    break;
    }
  }
}
}