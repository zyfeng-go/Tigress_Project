int sum(int x , int y ) 
{ 
  char _3_sum_$locals[12] ;
  union _3_sum_$node _3_sum_$stack[1][32] ;
  union _3_sum_$node *_3_sum_$sp[1] ;
  unsigned char *_3_sum_$pc[1] ;
  unsigned char _3_sum_$currentOp ;
  unsigned char left11 ;
  unsigned char right12 ;
  unsigned char result13 ;
  unsigned char left14 ;
  unsigned char right15 ;
  unsigned char result16 ;
  unsigned char left17 ;
  unsigned char right18 ;
  unsigned char result19 ;
  unsigned char left20 ;
  unsigned char right21 ;
  unsigned char result22 ;
  unsigned char left23 ;
  unsigned char right24 ;
  unsigned char result25 ;
  unsigned char left26 ;
  unsigned char right27 ;
  unsigned char result28 ;
  int left29 ;
  int right30 ;
  int result31 ;
  int selfModify_BEGIN_3 ;
  int selfModify_END_3 ;
  unsigned long *addrPtr34 ;
  unsigned int *opPtr35 ;
  int selfModify_BEGIN_4 ;
  int selfModify_END_4 ;
  unsigned char left38 ;
  unsigned char right39 ;
  unsigned char result40 ;

  {
  if (_2_init_tigress__opaque_array[((unsigned int )(((_1_entropy | 9) + ((long )(_1_entropy | 9) >> 63L)) ^ ((long )(_1_entropy | 9) >> 63L)) % 10) * 3 + 0] % _2_init_tigress__opaque_array[5] != _2_init_tigress__opaque_array[2]) {
    goto *((void *)((_1_entropy & 3) * (_1_entropy | 3) + (_1_entropy & ~ 3) * (~ _1_entropy & 3)));
  } else {

  }
  addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000001) + 34);
  *addrPtr34 = (unsigned long )(& left29);
  addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000001) + 66);
  *addrPtr34 = (unsigned long )(& right30);
  addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000001) + 112);
  *addrPtr34 = (unsigned long )(& result31);
  opPtr35 = (unsigned int *)((unsigned long )(&& Lab_2000001) + 96);
  addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000001) + 170);
  *addrPtr34 = (unsigned long )(&& Lab_2000002);
  selfModify_BEGIN_3 = 1;
  Lab_2000001: /* CIL Label */ 
  __asm__  volatile   (".byte 0x9b,0xf9,0xf9,0xf5,0x90,0xf9,0x9b,0xf5,0xf5,0xfc;\n"
                       ".byte 0x50;\n"
                       ".byte 0xf5,0x90,0xfd,0xfd,0x9b,0x90,0xf8,0x90,0x90,0xfd;\n"
                       ".byte 0x51;\n"
                       ".byte 0xf5,0xf8,0x9b,0xf8,0xf9,0xf5,0x9b,0xfc,0x9b,0xfc;\n"
                       ".byte 0x48, 0xb8, 0xba,0xfe,0xbf,0xc,0x98,0x82,0xce,0xba;\n"
                       ".byte 0xf9,0x90,0x90,0x9b,0x9b,0xf9,0x9b,0xf9,0xf5,0x90;\n"
                       ".byte 0x8b, 0x00;\n"
                       ".byte 0xf8,0xf9,0xfd,0xfd,0xf9,0x90,0xf8,0x90,0xf5,0xf9;\n"
                       ".byte 0x48, 0xb9,  0xaa,0xa0,0x4c,0x99,0xf3,0x41,0x8a,0x1f;\n"
                       ".byte 0x9b,0x90,0xfc,0xf9,0xf9,0xf8,0xf9,0x9b,0xfc,0x9b;\n"
                       ".byte 0x8b, 0x09;\n"
                       ".byte 0x9b,0xfd,0x90,0x9b,0xfc,0xfd,0x9b,0xf5,0xf5,0xfd;\n"
                       ".byte  0x90, 0x01, 0xc8, 0x90;\n"
                       ".byte 0xf9,0x9b,0x90,0xf9,0xfc,0x9b,0x90,0x90,0xf9,0xf5;\n"
                       ".byte 0x48, 0xb9, 0xe4,0xe8,0xd7,0xc6,0x78,0x78,0x14,0xcd;\n"
                       ".byte 0xfc,0xf9,0xfd,0xf5,0xf9,0xf5,0xf8,0xf5,0xf9,0xfc;\n"
                       ".byte 0x89, 0x01;\n"
                       ".byte 0x90,0x9b,0xfc,0xf5,0xfd,0xf9,0xf9,0xf8,0x90,0xfc;\n"
                       ".byte 0x59;\n"
                       ".byte 0xfc,0xfc,0xf8,0xf8,0xfc,0x90,0xfc,0xfd,0xf8,0xfd;\n"
                       ".byte 0x58;\n"
                       ".byte 0xf8,0x9b,0xfd,0xfd,0xfd,0x9b,0x9b,0xf5,0xfc,0x9b;\n"
                       ".byte 0xff, 0x25, 00, 00, 00, 00, 0xfc,0x21,0x9e,0x25,0x66,0xe9,0xfc,0x6a;\n"
                       ".byte 0x90,0xf9,0xfd,0xf8,0x9b,0x9b,0xfc,0x90,0xf5,0xfc;\n":);
  Lab_2000002: /* CIL Label */ 
  selfModify_END_3 = 1;
  {
  _3_sum_$sp[0] = _3_sum_$stack[0];
  _3_sum_$pc[0] = _3_sum_$array[0];
  }
  while (1) {
    {
    _3_sum_$currentOp = *(_3_sum_$pc[0]);
    }
    if (_3_sum_$currentOp == _3_sum__store_int$right_STA_0$left_STA_1) {
      {
      (_3_sum_$pc[0]) ++;
      *((int *)(_3_sum_$sp[0] + -1)->_void_star) = (_3_sum_$sp[0] + 0)->_int;
      _3_sum_$sp[0] += -2;
      }
    } else
    if (_3_sum_$currentOp == _3_sum__load_int$left_STA_0$result_STA_0) {
      {
      (_3_sum_$pc[0]) ++;
      (_3_sum_$sp[0] + 0)->_int = *((int *)(_3_sum_$sp[0] + 0)->_void_star);
      }
    } else
    if (_3_sum_$currentOp == _3_sum__formal$result_STA_0$value_LIT_0) {
      {
      (_3_sum_$pc[0]) ++;
      }
      switch (*((int *)_3_sum_$pc[0])) {
      case 1: 
      {
      (_3_sum_$sp[0] + 1)->_void_star = (void *)(& y);
      }
      break;
      case 0: 
      {
      (_3_sum_$sp[0] + 1)->_void_star = (void *)(& x);
      }
      break;
      }
      {
      (_3_sum_$sp[0]) ++;
      _3_sum_$pc[0] += 4;
      }
    } else
    if (_3_sum_$currentOp == _3_sum__goto$label_LAB_0) {
      {
      (_3_sum_$pc[0]) ++;
      _3_sum_$pc[0] += *((int *)_3_sum_$pc[0]);
      }
    } else
    if (_3_sum_$currentOp == _3_sum__return_int$expr_STA_0) {
      {
      (_3_sum_$pc[0]) ++;
      }
      return ((_3_sum_$sp[0] + 0)->_int);
    } else
    if (_3_sum_$currentOp == _3_sum__PlusA_int_int2int$right_STA_0$result_STA_0$left_STA_1) {
      {
      (_3_sum_$pc[0]) ++;
      {
      left29 = (_3_sum_$sp[0] + -1)->_int;
      right30 = (_3_sum_$sp[0] + 0)->_int;
      addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000003) + 6);
      *addrPtr34 = (unsigned long )(&& Lab_2000001);
      addrPtr34 = (unsigned long *)((unsigned long )(&& Lab_2000001) + 170);
      *addrPtr34 = (unsigned long )(&& Lab_2000004);
      *opPtr35 = 2429026704U;
      selfModify_BEGIN_4 = 1;
      Lab_2000003: /* CIL Label */ 
      __asm__  volatile   (".byte 0xff, 0x25, 00, 00, 00, 00, 0xf0,0x15,0xa3,0xca,0x6a,0x65,0xef,0x31;\n":);
      Lab_2000004: /* CIL Label */ 
      selfModify_END_4 = 1;
      (_3_sum_$sp[0] + -1)->_int = result31;
      }
      (_3_sum_$sp[0]) --;
      }
    } else
    if (_3_sum_$currentOp == _3_sum__local$result_STA_0$value_LIT_0) {
      {
      (_3_sum_$pc[0]) ++;
      (_3_sum_$sp[0] + 1)->_void_star = (void *)(_3_sum_$locals + *((int *)_3_sum_$pc[0]));
      (_3_sum_$sp[0]) ++;
      _3_sum_$pc[0] += 4;
      }
    } else {
      {

      }
    }
  }
}
}

